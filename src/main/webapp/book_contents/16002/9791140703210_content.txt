이 책의 후원자분들의 한 마디
프롤로그
이 책의 특징
학습 로드맵
코딩 두뇌 패치하기

기초편 | 코딩의 기초를 배워보자
 
1강 진짜 쉽게 설명하는 코딩

1. 프로그래밍에 대해 알아보자
1.1 프로그래밍할 때 고려할 다섯 가지 키워드
1.2 데이터를 보기 좋게 가공하는 것

2. 코딩할 때 필요한 최소한의 지식
2.1 우리가 보고 있는 화면의 모든 것, 웹 프론트엔드
2.2 서버의 관리자, 웹 백엔드
2.3 객체지향 프로그래밍 vs. 절차지향 프로그래밍
2.4 객체의 의미
2.5 공급자와 수요자, 웹 서버와 웹 클라이언트
2.6 정보를 보내는 GET과 POST 방식
2.7 징검다리 역할을 하는 API

3. 개발자의 절친, 크롬 개발자 도구
3.1 크롬 개발자 도구를 쓰는 이유
3.2 웹 페이지의 요소를 볼 수 있는 Element 탭
3.3 컴퓨터와 소통하는 console 탭
3.4 그밖의 기능들
 
2강 단번에 배우는 프론트엔드

1. 웹을 이루는 기본 뼈대, HTML
1.1 HTML과 마크업
1.2 블록 태그와 인라인 태그
1.3 HTML 태그의 속성
1.4 HTML 문서의 구조

2. HTML 태그를 꾸며 주는 CSS
2.1 CSS 선택자
2.2 CSS의 우선순위
*실전과제: 네이버의 CSS 조작해 보기
*실전과제: 네이버 로그인 버튼 똑같이 구현하기

3. 컴퓨터가 일으키는 두근두근 이벤트
3.1 button 태그로 알아보는 이벤트
*실전과제: 현재 시간을 출력하는 버튼 만들기
3.2 이벤트의 종류
3.3 이벤트의 타이밍
 
3강 오늘 배워 내일 써먹는 개발 기초

1. 데이터를 담는 바구니, 변수
1.1 변수와 데이터 타입
1.2 책상과 사물함으로 보는 원시 타입, 참조 타입
1.3 자바에서의 변수
1.4 자바스크립트에서의 변수
*실전과제: JSON 형태의 데이터 만들어 보기
1.5 메모리를 관리하는 스코프
1.6 변하지 않는 상수
1.7 변수에도 이름이 필요해

2. 데이터를 가공하는 공장소, 함수
2.1 더함이와 보여주로 배우는 함수
2.2 파라미터는 데이터 가공을 위해 들어가는 재료
2.3 함수의 구조
2.4 return! 값을 줄 것이냐, 종료시킬 것이냐
*실전과제: 영업사원 김지쳤 씨에게 함수 만들어 주기

3. 반드시 익혀야 하는 연산자, 조건문, 반복문
3.1 연산자
3.2 조건문
3.3 프로그래밍의 꽃, 반복문
*실전과제: MBTI 테스트 만들기
 
심화편 | 한 단계 업! 코딩 심화 스킬을 익히자
 
4강 비전공자도 쉽게 이해하는 개발 심화

1. 객체의 설계도, 클래스
1.1 이데아 이론으로 설명하는 클래스
1.2 new 연산자와 생성자
1.3 객체 협력
*실전과제: ‘캐셔-주문서-바리스타’ 객체 협력 코딩하기
1.4 객체를 보호하는 접근 제어자
1.5 값을 가져오고 세팅하는 게터와 세터

2. 효율의 끝판왕, 상속
2.1 프로그래밍에서 상속이란?
2.2 종업원 클래스로 보는 상속

3. 규칙을 정해 교통 정리하는 인터페이스
3.1 깔끔이와 더러비로 설명하는 인터페이스
3.2 인터페이스의 구조
3.3 인터페이스의 키워드
*실전과제: 바리스타와 캐셔에게 청소 인터페이스 구현하기

4. 오류를 미리 예방하는 예외 처리
4.1 에러를 대비해서 설치하는 덫, try~catch
4.2 catch의 파라미터로 넘어온 에러 객체 확인하기
4.3 피날레 장식, finally
4.4 에러 던지기, throw
 
5강 눈으로 바로 배우는 쿼리

1. 데이터를 관리하는 법, 데이터베이스와 DBMS
1.1 데이터를 다루는 방식, CRUD
1.2 테이블로 데이터를 표현하는 관계형 데이터베이스
1.3 ERD는 테이블의 관계도를 그린 것
1.4 관계형 데이터베이스의 테이블 용어

2. 데이터베이스에게 보내는 친절한 요청, 쿼리
2.1 테이블을 생성하고, 데이터를 넣는다
2.2 쿼리를 통해 테이블 출력하기

3. 테이블을 연결하는 조인
3.1 조인이란?
3.2 다이어그램으로 배우는 조인
 
실전편 | 비전공자, 개발자로 커리어전환하다

6강 6개월만 공부하면 정말 개발자가 될 수 있다

1. 개발자가 되려면 적성 체크부터!

2. 나는 어떤 분야의 개발자가 어울릴까?
2.1 웹 프론트엔드 개발자와 백엔드 개발자
2.2 웹 퍼블리셔? 웹 디자이너? 프론드엔드 개발자와 차이점
2.3 데이터 사이언티스트
2.4 머신러닝·딥러닝 개발자
2.5 임베디드 개발자
2.6 게임 개발자
2.7 SAP 개발자

7강 커리어전환을 위해 본격적으로 해야 할 일

1. 코딩을 배울 수 있는 다섯 가지 루트
1.1 국비 지원 학원
1.2 K-digital training
1.3 코딩부트캠프
1.4 취업 연계 프로그램
1.5 비전공자라면 어디서 배워야 할까?

2. 제대로 된 강의를 고르는 법
2.1 국비 지원 강의를 찾는 법
2.2 추천 과목, 비추천 과목

3. 용돈 받아 가면서 프로그래밍 공부하는 법

4. 정보처리기사 자격증 한 번에 붙는 법
4.1 응시 자격
4.2 필기 시험 및 실기 시험

8강 통과하는 이력서, 탈락하는 이력서

1. 비전공자도 합격하는 이력서 작성법
1.1 자격증
1.2 보유 기술과 능력
1.3 참여 프로젝트
1.4 특기 사항

2. 자기소개서 작성하는 꿀팁
2.1 두괄식으로 쓰기
2.2 숫자를 사랑하기
2.3 STAR 기법
2.4 개복치 기법

3. 실전! 자기소개서 작성해 보기
3.1 지원 동기 및 입사 후 포부
3.2 직무 적합성
3.3 직선형 경험
3.4 곡선형 경험
3.5 강점 및 특기 사항
3.6 성격의 장단점
3.7 창의적 문제 해결

9강 포트폴리오와 면접 준비하기

1. 비전공자가 포트폴리오 제작하는 방법
1.1 프로젝트의 단권화
1.2 코드 결과물을 깃허브에 올리자
1.3 포트폴리오? 코딩테스트?

2. 인적성 검사, 생각보다 더 중요하다

3. 면접볼 때 반드시 준비해야 하는 것
3.1 1분 자기소개 가이드
3.2 1분 자기소개 대본
3.3 CS 면접 질문

10강 개발자와 테크기업의 생생한 현장

1. 비전공자 출신 개발자의 현실 연봉

2. SI 업체와 솔루션 업체, 무슨 차이일까?

3. 신나는 일이 가득? 스타트업 취직

4. 자유롭게 일하는 프리랜서 개발자

5. 변하고 있는 개발자의 환경들
5.1 30세에 개발자로 커리어전환
5.2 실제 개발자의 환경
 
에필로그
부록 1 개발자에서 데이터 사이언티스트로
부록 2 코딩테스트 입문