1장. 오라클 아키텍처
_ 1. 기본 아키텍처
_ 2. DB 버퍼 캐시
_ 3. 버퍼 Lock
_ 4. Redo
_ 5. Undo
_ 6. 문장수준 읽기 일관성
_ 7. Consistent vs. Current 모드 읽기
_ 8. 블록 클린아웃
_ 9. Snapshot too old
_ 10. 대기 이벤트
_ 11. Shared Pool

2장. 트랜잭션과 Lock
_ 1. 트랜잭션 동시성 제어
_ 2. 트랜잭션 수준 읽기 일관성
_ 3. 비관적 vs. 낙관적 동시성 제어
_ 4. 동시성 구현 사례
_ 5. 오라클 Lock

3장. 오라클 성능 관리
_ 1. Explain Plan
_ 2. AutoTrace
_ 3. SQL 트레이스
_ 4. DBMS_XPLAN 패키지
_ 5. V$SYSSTAT
_ 6. V$SYSTEM_EVENT
_ 7. Response Time Analysis 방법론과 OWI
_ 8. Statspack / AWR
_ 9. ASH(Active Session History)
_ 10. V$SQL
_ 11. End-To-End 성능관리
_ 12. 데이터베이스 성능 고도화 정석 해법

4장. 라이브러리 캐시 최적화 원리
_ 1. SQL과 옵티마이저
_ 2. SQL 처리과정
_ 3. 라이브러리 캐시 구조
_ 4. 커서 공유
_ 5. 바인드 변수의 중요성
_ 6. 바인드 변수의 부작용과 해법
_ 7. 세션 커서 캐싱
_ 8. 애플리케이션 커서 캐싱
_ 9. Static vs. Dynamic SQL
_ 10. Dynamic SQL 사용 기준
_ 11. Static SQL 구현을 위한 기법들

5장. 데이터베이스 Call 최소화 원리
_ 1. Call 통계
_ 2. User Call vs. Recursive Call
_ 3. 데이터베이스 Call이 성능에 미치는 영향
_ 4. Array Processing 활용
_ 5. Fetch Call 최소화
_ 6. 페이지 처리의 중요성
_ 7. PL/SQL 함수의 특징과 성능 부하
_ 8. PL/SQL 함수 호출 부하 해소 방안

6장. I/O 효율화 원리
_ 1. 블록 단위 I/O
_ 2. Memory vs. Disk I/O
_ 3. Single Block vs. Multiblock I/O
_ 4. Prefetch
_ 5. Direct Path I/O
_ 6. RAC 캐시 퓨전
_ 7. Result 캐시
_ 8. I/O 효율화 원리

부록
_ 1. Library Cache Lock & Pin
_ 2. Cursor_Sharing
_ 3. Deterministic 함수 사용 시 주의사항